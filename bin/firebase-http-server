#!/usr/bin/env node

var colors = require('colors'),
    httpServer = require('../lib/firebase-http-server'),
    argv = require('optimist').argv,
    portfinder = require('portfinder');

if (argv.h || argv.help) {
  console.log([
    'usage: firebase-http-server [path/to/firebase.js] [options]',
    '',
    'options:',
    '  -p                 Port to use [8080]',
    '  -a                 Address to use [0.0.0.0]',
    '  -r --root          Root public directory to serve (overrides firebase.js setting)',
    '  -s --silent        Suppress log messages from output',
    '  -h --help          Print this list and exit.'
  ].join('\n'));
  process.exit();
}

var port = argv.p || parseInt(process.env.PORT, 10),
    host = argv.a || '0.0.0.0',
    log = (argv.s || argv.silent) ? (function () {}) : console.log,
    requestLogger;

if (!argv.s && !argv.silent) {
  requestLogger = function(req) {
    log(
      '[%s] "%s %s" "%s"', (new Date()).toUTCString(), req.method.cyan, req.url.cyan,
      req.headers['user-agent']
    );
  };
}

var firebaseJson = argv._[0] || 'firebase.json';

if (!port) {
  portfinder.basePort = 8080;
  portfinder.getPort(function (err, port) {
    if (err) throw err;
    listen(port);
  });
} else {
  listen(port);
}

function listen(port) {
  var options = {
    firebaseJson: firebaseJson,
    root: argv.r || argv.root,
    logFn: requestLogger,
    log: log
  };

  var server = httpServer.createServer(options);
  server.listen(port, host, function() {
    log(
      'Starting up http-server, serving '.yellow + firebaseJson.cyan + ' from '.yellow +
      server.root.cyan + ' on port: '.yellow + port.toString().cyan
    );
    log('Hit CTRL-C to stop the server');
  });
}

if (process.platform !== 'win32') {
  // Signal handlers don't work on Windows.
  process.on('SIGINT', function () {
    log('http-server stopped.'.red);
    process.exit();
  });
}
